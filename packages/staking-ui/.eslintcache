[{"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/index.tsx":"1","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/reportWebVitals.ts":"2","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/index.tsx":"3","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/HomePage.tsx":"4","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ProposalTable.tsx":"5","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ValidatorTable.tsx":"6","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/CreateProposalForm.tsx":"7","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/index.ts":"8","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/LocalGridStore.ts":"9","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/BasStore.ts":"10","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/index.js":"11","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/types.js":"12","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/metamask.js":"13","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/config.js":"14","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/staking.js":"15","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/governance.js":"16","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/provider.js":"17"},{"size":735,"mtime":1648195951540,"results":"18","hashOfConfig":"19"},{"size":431,"mtime":1648195951541,"results":"20","hashOfConfig":"19"},{"size":1480,"mtime":1648195951541,"results":"21","hashOfConfig":"19"},{"size":3890,"mtime":1648203050274,"results":"22","hashOfConfig":"19"},{"size":5719,"mtime":1648204657302,"results":"23","hashOfConfig":"19"},{"size":4130,"mtime":1648203050281,"results":"24","hashOfConfig":"19"},{"size":5402,"mtime":1648195951540,"results":"25","hashOfConfig":"19"},{"size":801,"mtime":1648203050282,"results":"26","hashOfConfig":"19"},{"size":2635,"mtime":1648195951542,"results":"27","hashOfConfig":"19"},{"size":2265,"mtime":1648203069427,"results":"28","hashOfConfig":"19"},{"size":3826,"mtime":1648205801497,"results":"29","hashOfConfig":"30"},{"size":666,"mtime":1648205801497,"results":"31","hashOfConfig":"30"},{"size":3398,"mtime":1648205801497,"results":"32","hashOfConfig":"30"},{"size":45,"mtime":1648205801497,"results":"33","hashOfConfig":"30"},{"size":2575,"mtime":1648205801497,"results":"34","hashOfConfig":"30"},{"size":4885,"mtime":1648205801497,"results":"35","hashOfConfig":"30"},{"size":4630,"mtime":1648205801497,"results":"36","hashOfConfig":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ee11e5",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xcqml",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/index.tsx",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/reportWebVitals.ts",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/index.tsx",["77","78","79"],"import {HomeOutlined} from \"@ant-design/icons\"\nimport {Menu, PageHeader} from \"antd\"\nimport {observer} from \"mobx-react\"\nimport {useState} from \"react\"\nimport {Link, Route, Switch, useHistory} from \"react-router-dom\"\n\nimport HomePage from \"./HomePage\"\n\ninterface IIndexPageProps {\n}\n\nconst titles: Record<string, any> = {\n  home: {\n    title: 'Home Page',\n    sub: ' ',\n  },\n}\n\nconst IndexPage = observer((props: IIndexPageProps) => {\n  const [currentPage, setCurrentPage] = useState('home')\n  const history = useHistory()\n  return (<div style={{display: 'flex', height: '100%'}}>\n    <div style={{width: '256px', height: '100%'}}>\n      <Menu\n        defaultSelectedKeys={['home']}\n        inlineCollapsed={false}\n        mode=\"inline\"\n        style={{\n          height: '100%'\n        }}\n        theme=\"dark\"\n        onClick={({key}) => {\n          setCurrentPage(key)\n        }}\n      >\n        <Menu.Item key=\"home\" icon={<HomeOutlined translate=\"yes\"/>}>\n          <Link to=\"/\">\n            Consensus\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </div>\n\n    <div style={{width: '100%', padding: '0 20px 0'}}>\n      <PageHeader\n        className=\"site-page-header\"\n        subTitle={titles[currentPage].sub || 'Unknown Page'}\n        title={titles[currentPage].title || 'Unknown Page'}\n        onBack={() => history.goBack()}\n      />\n\n      <Switch>\n        <Route component={HomePage} path=\"/\"/>\n      </Switch>\n    </div>\n  </div>)\n})\n\nexport default IndexPage\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/HomePage.tsx",["80","81","82","83","84","85","86","87","88","89","90","91","92"],"import {\n  LockOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {Button, Divider, Drawer, Menu} from \"antd\";\nimport {observer} from \"mobx-react\";\nimport {ReactElement, useEffect, useState} from \"react\";\n\nimport CreateProposalForm from \"../components/CreateProposalForm\";\nimport ProposalTable from \"../components/ProposalTable\";\nimport ValidatorTable from \"../components/ValidatorTable\";\nimport {useBasStore} from \"../stores\";\n\nconst ProposalNav = observer((props: any): ReactElement => {\n  const [drawerVisible, setDrawerVisible] = useState(false)\n  return (\n    <div>\n      <Drawer\n        bodyStyle={{paddingBottom: 80}}\n        title=\"Create proposal\"\n        visible={drawerVisible}\n        width={500}\n        onClose={() => {\n          setDrawerVisible(false)\n        }}\n      >\n        <CreateProposalForm/>\n      </Drawer>\n\n      <ProposalTable/>\n\n      <br/>\n\n      <Button icon={<PlusOutlined translate=\"yes\"/>} size=\"large\" type=\"primary\" onClick={() => {\n        setDrawerVisible(true)\n      }}>Create Proposal</Button>\n    </div>\n  );\n})\n\nconst ValidatorNav = observer((props: any): ReactElement => {\n  const store = useBasStore()\n  const [stakingRewards, setStakingRewards] = useState('0')\n  useEffect(() => {\n\n  }, [store])\n  return (\n    <div>\n      <ValidatorTable/>\n    </div>\n  );\n})\n\ninterface IHomePageProps {\n}\n\nconst HomePage = observer((props: IHomePageProps): ReactElement => {\n  const store = useBasStore()\n  const [currentTab, setCurrentTab] = useState('governance')\n  const [blockInfo, setBlockInfo] = useState({} as any)\n  useEffect(() => {\n    setInterval(async () => {\n      if (!store.isConnected) return;\n      setBlockInfo(await store.getBlockNumber())\n    }, 1_000)\n  }, [store])\n  if (!store.isConnected) {\n    return <h1>Connecting...</h1>\n  }\n  return (\n    <div>\n      <Menu\n        mode=\"horizontal\"\n        selectedKeys={[currentTab]}\n        onSelect={({selectedKeys}) => {\n          setCurrentTab(selectedKeys[0])\n        }}\n      >\n        <Menu.Item key=\"governance\" icon={<LockOutlined translate=\"yes\"/>}>\n          Governance\n        </Menu.Item>\n\n        <Menu.Item key=\"voting_power\" icon={<LockOutlined translate=\"yes\"/>}>\n          Voting Power\n        </Menu.Item>\n\n        <Menu.Item key=\"validator\" icon={<LockOutlined translate=\"yes\"/>}>\n          Validators\n        </Menu.Item>\n      </Menu>\n\n      <br/>\n\n      {currentTab === 'governance' && <ProposalNav/>}\n\n      {currentTab === 'validator' && <ValidatorNav/>}\n\n      <Divider/>\n\n      <b>blockNumber</b>: \n      \n      {blockInfo.blockNumber}\n        \n      <br/>\n\n      <b>currentEpoch</b>: \n        \n      {blockInfo.epoch}\n        \n      <br/>\n\n      <b>nextEpochBlock</b>: \n      \n      {blockInfo.nextEpochBlock}\n      \n      &nbsp;(in {blockInfo.nextEpochInSec} sec\n\n      or {(blockInfo.nextEpochInSec / 60).toFixed(1)} min)\n      \n      <br/>\n\n      <b>blockTime</b>: \n\n        {blockInfo.blockTime}\n\n      <br/>\n\n      <br/>\n\n      <b>activeValidatorsLength</b>: \n      \n      {blockInfo.activeValidatorsLength}\n      \n      <br/>\n\n      <b>epochBlockInterval</b>: \n      \n      {blockInfo.epochBlockInterval}\n      \n      <br/>\n\n      <b>misdemeanorThreshold</b>: \n      \n      {blockInfo.misdemeanorThreshold}\n      \n      <br/>\n\n      <b>felonyThreshold</b>: \n      \n      {blockInfo.felonyThreshold}\n      \n      <br/>\n\n      <b>validatorJailEpochLength</b>: \n      \n      {blockInfo.validatorJailEpochLength}\n      \n      <br/>\n\n      <b>undelegatePeriod</b>: \n      \n      {blockInfo.undelegatePeriod}\n      \n      <br/>\n\n      <b>minValidatorStakeAmount</b>: \n      \n      {blockInfo.minValidatorStakeAmount}\n      \n      <br/>\n\n      <b>minStakingAmount</b>: \n      \n      {blockInfo.minStakingAmount}\n      \n      <br/>\n\n      <br/>\n      P.S: MetaMask caches responses for 12 seconds\n\n      <Divider/>\n    </div>\n  );\n});\n\nexport default HomePage\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ProposalTable.tsx",["93","94","95","96","97","98","99","100"],"import {IGovernanceProposal, TProposalStatus} from \"@ankr.com/bas-javascript-sdk\";\nimport {Table, Descriptions, Tag, Button} from \"antd\";\nimport {observer} from \"mobx-react\";\nimport {ReactElement} from \"react\";\n\nimport {useBasStore} from \"../stores\";\nimport {BasStore} from \"../stores/BasStore\";\nimport {useLocalGridStore} from \"../stores/LocalGridStore\";\n\nconst renderStatus = (status: TProposalStatus): ReactElement => {\n  const colors: Record<string, string> = {\n    Pending: 'grey',\n    Active: 'blue',\n    Canceled: 'grey',\n    Defeated: 'orange',\n    Succeeded: 'blue',\n    Queued: 'yellow',\n    Expired: 'red',\n    Executed: 'green'\n  };\n  return <Tag key={status} color={colors[status.toString()] || 'grey'}>{status}</Tag>\n};\n\n// const renderType = (type: EProposalType): ReactElement => {\n//   const colors: Record<string, string> = {\n//     Unknown: 'grey',\n//     AddDeployer: 'blue',\n//     RemoveDeployer: 'orange',\n//     DisableContract: 'orange',\n//     EnableContract: 'orange',\n//   };\n//   return <Tag color={colors[type.toString()] || 'grey'} key={type}>{type}</Tag>\n// };\n\nconst createTableColumns = (store: BasStore) => {\n  return [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      render: (value: string) => `${value.substr(0, 20)}...`,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: renderStatus,\n    },\n    {\n      title: 'Type',\n      key: 'type',\n      // render: (event: IProposal) => {\n      //   const firstType = store.matchProposalType(event.targets[0], event.calldatas[0])\n      //   return renderType(firstType)\n      // },\n    },\n    {\n      title: 'Block Number',\n      dataIndex: 'blockNumber',\n      key: 'blockNumber',\n    },\n    {\n      title: 'Voting Period',\n      key: 'votingPeriod',\n      render: ({startBlock, endBlock}: any) => {\n        return `${startBlock} -> ${endBlock}`\n      }\n    },\n    {\n      title: 'Description',\n      dataIndex: 'desc',\n      key: 'desc',\n      render: (description: string) => description.length > 30 ? `${description.substr(0, 30)}...` : description,\n    },\n    {\n      render: (event: IGovernanceProposal) => {\n        if (`${event.status}` === 'Active') {\n          return (\n            <Button.Group>\n              <Button type=\"primary\" onClick={async () => {\n                const {transactionHash, receipt} = await store.getBasSdk().getGovernance().voteForProposal(event.id);\n                console.log(transactionHash);\n                console.log(await receipt);\n              }}>Vote For</Button>\n\n              <Button onClick={async () => {\n                const {\n                  transactionHash,\n                  receipt\n                } = await store.getBasSdk().getGovernance().voteAgainstProposal(event.id);\n                console.log(transactionHash);\n                console.log(await receipt);\n              }}>Vote Against</Button>\n            </Button.Group>\n          )\n        }\n        if (`${event.status}` === 'Succeeded' || `${event.status}` === 'Queued') {\n          return (\n            <Button.Group>\n              <Button type=\"primary\" onClick={async () => {\n                alert(\"not implemented\")\n                // const {transactionHash, receiptPromise} = await store.getBasSdk().getGovernance().executeProposal(event),\n                //   receipt = await receiptPromise\n                // console.log(transactionHash)\n                // console.log(receipt)\n              }}>Execute</Button>\n            </Button.Group>\n          )\n        }\n      }\n    }\n  ];\n}\n\nexport interface IProposalTableProps {\n}\n\nconst ProposalExplainer = ({event}: { event: IGovernanceProposal }) => {\n  return (\n    <div>\n      <Descriptions\n        bordered\n        column={1}\n        layout=\"horizontal\"\n        size=\"small\"\n        title={`Proposal: #${event.id}`}\n      >\n        <Descriptions.Item key=\"id\" label=\"ID\">{event.id}</Descriptions.Item>\n\n        <Descriptions.Item key=\"status\" label=\"Status\">{renderStatus(event.status)}</Descriptions.Item>\n\n        <Descriptions.Item key=\"governanceAddress\" label=\"Governance Address\">{event.proposer}</Descriptions.Item>\n\n        <Descriptions.Item key=\"startBlock\" label=\"Start Block\">{event.startBlock}</Descriptions.Item>\n\n        <Descriptions.Item key=\"endBlock\" label=\"End Block\">{event.endBlock}</Descriptions.Item>\n\n        <Descriptions.Item key=\"proposer\" label=\"Proposer Address\">{event.proposer}</Descriptions.Item>\n\n        <Descriptions.Item key=\"description\" label=\"Description\">{event.desc}</Descriptions.Item>\n      </Descriptions>\n\n      <br/>\n\n      <Descriptions\n        bordered\n        column={2}\n        layout=\"horizontal\"\n        size=\"small\"\n        title=\"Actions\"\n      >\n        {event.targets.map((value: any, index: number) => (\n          <Descriptions.Item key={value}\n                             label={`${value} (${event.values[index]} wei)`}>{event.inputs[index]}</Descriptions.Item>\n        ))}\n      </Descriptions>\n\n      <br/>\n    </div>\n  )\n}\n\nconst ProposalTable = observer(() => {\n  const store = useBasStore()\n  const grid = useLocalGridStore<IGovernanceProposal>(async (): Promise<[IGovernanceProposal[], boolean]> => {\n    const proposals = await store.getBasSdk().getGovernance().getProposals({fromBlock: 'earliest', toBlock: 'latest'})\n    return [proposals, false]\n  })\n  return (\n    <Table\n      columns={createTableColumns(store)} dataSource={grid.items} expandable={{\n      expandedRowRender: (event: IGovernanceProposal) => {\n        return <ProposalExplainer event={event}/>\n      },\n    }}\n      loading={grid.isLoading}\n      pagination={grid.paginationConfig}\n      rowKey=\"proposalId\"\n    />\n  );\n});\n\nexport default ProposalTable\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ValidatorTable.tsx",["101","102","103","104","105","106","107","108","109","110","111","112"],"/* eslint-disable no-await-in-loop */\nimport {Web3Uint256, IValidator} from \"@ankr.com/bas-javascript-sdk\";\nimport {Button, Table} from \"antd\";\nimport {BigNumber} from \"bignumber.js\"\nimport {observer} from \"mobx-react\";\n\nimport {useBasStore} from \"../stores\";\nimport {BasStore} from \"../stores/BasStore\";\nimport {useLocalGridStore} from \"../stores/LocalGridStore\";\n\nconst createTableColumns = (store: BasStore) => {\n  return [\n    {\n      title: 'Validator',\n      dataIndex: 'validator',\n      key: 'validator',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string) => {\n        switch (status) {\n          case '0':\n            return 'Not Found'\n          case '1':\n            return 'Active'\n          case '2':\n            return 'Pending'\n          case '3':\n            return 'Jail'\n          default:\n            return `Unknown (${status})`;\n        }\n      }\n    },\n    {\n      title: 'Slashes',\n      dataIndex: 'slashesCount',\n      key: 'slashesCount',\n    },\n    {\n      title: 'Total Delegated',\n      dataIndex: 'totalDelegated',\n      key: 'totalDelegated',\n      render: (value: string) => (Number(value) / 1e18).toFixed(0)\n    },\n    {\n      title: 'Delegated Amount',\n      dataIndex: 'myDelegatedAmount',\n      key: 'myDelegatedAmount',\n      render: (value: string) => (Number(value) / 1e18).toFixed(0)\n    },\n    {\n      title: 'Validator Fee (committed)',\n      dataIndex: 'validatorFee',\n      key: 'validatorFee',\n      render: (value: string) => (Number(value) / 1e18)\n    },\n    {\n      render: (validator: IValidator) => {\n        return (\n          <>\n            <Button type=\"primary\" onClick={async () => {\n              const amount = prompt('Enter delegation amount (in ether): ')\n              if (!amount) return;\n              const bigAmount = new BigNumber(amount).multipliedBy(10**18).toString(10)\n              console.log(`Amount is: ${bigAmount}`)\n              const result = await store.getBasSdk().getStaking().delegateTo(validator.validator, `${bigAmount}`);\n                const receipt = await result.receipt;\n              console.log(`Receipt: ${JSON.stringify(receipt, null, 2)}`);\n            }}>Delegate</Button>\n            &nbsp;\n            &nbsp;\n            <Button type=\"default\" onClick={async () => {\n              const amount = prompt('Enter undelegation amount (in ether): ')\n              if (!amount) return;\n              console.log(`Amount is: ${(Number(amount) * 10 ** 18).toFixed(0)}`)\n              const result = await store.getBasSdk().getStaking().undelegateFrom(validator.validator, `${(Number(amount) * 10 ** 18).toFixed(0)}`);\n                const receipt = await result.receipt;\n              console.log(`Receipt: ${JSON.stringify(receipt, null, 2)}`);\n            }}>Undelegate</Button>\n          </>\n        )\n      }\n    }\n  ];\n}\n\nexport interface IValidatorTableProps {\n}\n\ninterface IValidatorWithAmounts extends IValidator {\n  myDelegatedAmount: Web3Uint256;\n  validatorFee: Web3Uint256;\n  myStakingRewards: Web3Uint256;\n}\n\nconst ValidatorTableProps = observer((props: IValidatorTableProps) => {\n  const store = useBasStore()\n  const grid = useLocalGridStore<IValidator>(async (offset: number, limit: number): Promise<[IValidatorWithAmounts[], boolean]> => {\n    const validators = await store.getBasSdk().getStaking().getValidators();\n      const result: IValidatorWithAmounts[] = []\n    // eslint-disable-next-line no-restricted-syntax\n    for (const validator of validators) {\n      result.push({ ...validator, myDelegatedAmount: await store.getBasSdk().getStaking().getMyDelegatedAmount(validator.validator),\n        validatorFee: await store.getBasSdk().getStaking().getValidatorRewards(validator.validator),\n        myStakingRewards: await store.getBasSdk().getStaking().getMyStakingRewards(validator.validator),});\n    }\n    return [result, false]\n  })\n  return (\n    <Table\n      columns={createTableColumns(store)}\n      dataSource={grid.items}\n      loading={grid.isLoading}\n      pagination={grid.paginationConfig}\n    />\n  );\n});\n\nexport default ValidatorTableProps\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/CreateProposalForm.tsx",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/index.ts",["113","114","115"],"import {MobXProviderContext} from 'mobx-react'\nimport React from \"react\";\n\nimport {BasStore, DEVNET_CONFIG, TESTNET_CONFIG} from \"./BasStore\";\n\nconst currentEnvironment = process.env.REACT_APP_ENVIRONMENT || 'devnet';\n\nconsole.log(`Current env is: ${currentEnvironment}`)\n\nlet config = DEVNET_CONFIG\nif (currentEnvironment === 'devnet') {\n  config = DEVNET_CONFIG\n} else if (currentEnvironment === 'testnet') {\n  config = TESTNET_CONFIG\n}\n\nconst basStore = new BasStore(config)\nbasStore.connectFromInjected().then(async () => {\n  const currentAccount = basStore.getBasSdk().getKeyProvider().accounts;\n  console.log(`Current account is: ${[currentAccount]}`)\n})\n\nexport const useStores: any = () => {\n  return React.useContext(MobXProviderContext)\n}\n\nexport const useBasStore = (): BasStore => basStore","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/LocalGridStore.ts",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/BasStore.ts",["116"],"import {BasSdk, IConfig} from \"@ankr.com/bas-javascript-sdk\";\nimport {action, makeAutoObservable} from \"mobx\";\n\nconst makeDefaultConfig = (chainId: number, chainName: string, rpcUrl: string): IConfig => {\n  return {\n    chainId,\n    chainName,\n    rpcUrl,\n    // BSC-compatible contracts\n    stakingAddress: '0x0000000000000000000000000000000000001000',\n    slashingIndicatorAddress: '0x0000000000000000000000000000000000001001',\n    systemRewardAddress: '0x0000000000000000000000000000000000001002',\n    // custom contracts\n    stakingPoolAddress: '0x0000000000000000000000000000000000007001',\n    governanceAddress: '0x0000000000000000000000000000000000007002',\n    chainConfigAddress: '0x0000000000000000000000000000000000007003',\n    runtimeUpgradeAddress: '0x0000000000000000000000000000000000007004',\n    deployerProxyAddress: '0x0000000000000000000000000000000000007005',\n  }\n}\n\nexport const DEVNET_CONFIG: IConfig = makeDefaultConfig(1337, 'BAS devnet', 'http://localhost:8545/')\nexport const TESTNET_CONFIG: IConfig = makeDefaultConfig(17242, 'BAS testnet', 'https://rpc-dev.ccv2.ankr.com/')\n\nexport class BasStore {\n\n  public isConnected = false\n\n  private readonly sdk: BasSdk\n\n  public constructor(private readonly config: IConfig) {\n    this.sdk = new BasSdk(config)\n    makeAutoObservable(this)\n  }\n\n  public getBasSdk(): BasSdk {\n    return this.sdk\n  }\n\n  @action\n  public async connectFromInjected(): Promise<void> {\n    this.isConnected = false\n    if (!this.sdk.isConnected()) {\n      await this.sdk.connect()\n    }\n    this.isConnected = true\n    try {\n      await this.getBlockNumber()\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public async getBlockNumber(): Promise<{\n    blockNumber: number;\n    epoch: number;\n    nextEpochBlock: number;\n    nextEpochInSec: number;\n    blockTime: number;\n    activeValidatorsLength: number;\n    epochBlockInterval: number;\n    misdemeanorThreshold: number;\n    felonyThreshold: number;\n    validatorJailEpochLength: number;\n    undelegatePeriod: number;\n    minValidatorStakeAmount: number;\n    minStakingAmount: number;\n  }> {\n    const chainConfig = await this.sdk.getChainConfig();\n      const chainParams = await this.sdk.getChainParams();\n    return { ...chainConfig, ...chainParams}\n  }\n}","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/index.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/types.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/metamask.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/config.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/staking.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/governance.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/provider.js",[],{"ruleId":"117","severity":1,"message":"118","line":12,"column":30,"nodeType":"119","messageId":"120","endLine":12,"endColumn":33,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":19,"column":29,"nodeType":"124","messageId":"125","endLine":19,"endColumn":51},{"ruleId":"126","severity":1,"message":"123","line":19,"column":29,"nodeType":"124","messageId":"125","endLine":19,"endColumn":51},{"ruleId":"122","severity":1,"message":"123","line":14,"column":31,"nodeType":"124","messageId":"125","endLine":14,"endColumn":41},{"ruleId":"126","severity":1,"message":"123","line":14,"column":31,"nodeType":"124","messageId":"125","endLine":14,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":14,"column":38,"nodeType":"119","messageId":"120","endLine":14,"endColumn":41,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"123","line":41,"column":32,"nodeType":"124","messageId":"125","endLine":41,"endColumn":42},{"ruleId":"126","severity":1,"message":"123","line":41,"column":32,"nodeType":"124","messageId":"125","endLine":41,"endColumn":42},{"ruleId":"117","severity":1,"message":"118","line":41,"column":39,"nodeType":"119","messageId":"120","endLine":41,"endColumn":42,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"129","line":43,"column":10,"nodeType":"124","messageId":"125","endLine":43,"endColumn":24},{"ruleId":"126","severity":1,"message":"129","line":43,"column":10,"nodeType":"124","messageId":"125","endLine":43,"endColumn":24},{"ruleId":"122","severity":1,"message":"130","line":43,"column":26,"nodeType":"124","messageId":"125","endLine":43,"endColumn":43},{"ruleId":"126","severity":1,"message":"130","line":43,"column":26,"nodeType":"124","messageId":"125","endLine":43,"endColumn":43},{"ruleId":"122","severity":1,"message":"123","line":57,"column":28,"nodeType":"124","messageId":"125","endLine":57,"endColumn":49},{"ruleId":"126","severity":1,"message":"123","line":57,"column":28,"nodeType":"124","messageId":"125","endLine":57,"endColumn":49},{"ruleId":"117","severity":1,"message":"118","line":60,"column":52,"nodeType":"119","messageId":"120","endLine":60,"endColumn":55,"suggestions":"131"},{"ruleId":"117","severity":1,"message":"118","line":65,"column":40,"nodeType":"119","messageId":"120","endLine":65,"endColumn":43,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":76,"column":44,"nodeType":"135","messageId":"136","endLine":76,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":82,"column":17,"nodeType":"139","messageId":"140","endLine":82,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":83,"column":17,"nodeType":"139","messageId":"140","endLine":83,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":91,"column":17,"nodeType":"139","messageId":"140","endLine":91,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":92,"column":17,"nodeType":"139","messageId":"140","endLine":92,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":101,"column":17,"nodeType":"143","messageId":"140","endLine":101,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":152,"column":36,"nodeType":"119","messageId":"120","endLine":152,"endColumn":39,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":65,"column":30,"nodeType":"143","messageId":"140","endLine":65,"endColumn":76},{"ruleId":"137","severity":1,"message":"138","line":68,"column":15,"nodeType":"139","messageId":"140","endLine":68,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":71,"column":15,"nodeType":"139","messageId":"140","endLine":71,"endColumn":26},{"ruleId":"141","severity":1,"message":"145","line":76,"column":30,"nodeType":"143","messageId":"140","endLine":76,"endColumn":78},{"ruleId":"137","severity":1,"message":"138","line":78,"column":15,"nodeType":"139","messageId":"140","endLine":78,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":81,"column":15,"nodeType":"139","messageId":"140","endLine":81,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":99,"column":39,"nodeType":"124","messageId":"125","endLine":99,"endColumn":66},{"ruleId":"126","severity":1,"message":"123","line":99,"column":39,"nodeType":"124","messageId":"125","endLine":99,"endColumn":66},{"ruleId":"122","severity":1,"message":"146","line":101,"column":53,"nodeType":"124","messageId":"125","endLine":101,"endColumn":67},{"ruleId":"126","severity":1,"message":"146","line":101,"column":53,"nodeType":"124","messageId":"125","endLine":101,"endColumn":67},{"ruleId":"122","severity":1,"message":"147","line":101,"column":69,"nodeType":"124","messageId":"125","endLine":101,"endColumn":82},{"ruleId":"126","severity":1,"message":"147","line":101,"column":69,"nodeType":"124","messageId":"125","endLine":101,"endColumn":82},{"ruleId":"137","severity":1,"message":"138","line":8,"column":1,"nodeType":"139","messageId":"140","endLine":8,"endColumn":12},{"ruleId":"137","severity":1,"message":"138","line":20,"column":3,"nodeType":"139","messageId":"140","endLine":20,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":23,"column":25,"nodeType":"119","messageId":"120","endLine":23,"endColumn":28,"suggestions":"148"},{"ruleId":"137","severity":1,"message":"138","line":50,"column":7,"nodeType":"139","messageId":"140","endLine":50,"endColumn":20},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["149","150"],"no-unused-vars","'props' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars",["151","152"],["153","154"],"'stakingRewards' is assigned a value but never used.","'setStakingRewards' is assigned a value but never used.",["155","156"],["157","158"],"consistent-return","Expected to return a value at the end of arrow function 'render'.","ArrowFunctionExpression","missingReturn","no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression",["159","160"],"Unexpected prompt.","'offset' is defined but never used.","'limit' is defined but never used.",["161","162"],{"messageId":"163","fix":"164","desc":"165"},{"messageId":"166","fix":"167","desc":"168"},{"messageId":"163","fix":"169","desc":"165"},{"messageId":"166","fix":"170","desc":"168"},{"messageId":"163","fix":"171","desc":"165"},{"messageId":"166","fix":"172","desc":"168"},{"messageId":"163","fix":"173","desc":"165"},{"messageId":"166","fix":"174","desc":"168"},{"messageId":"163","fix":"175","desc":"165"},{"messageId":"166","fix":"176","desc":"168"},{"messageId":"163","fix":"177","desc":"165"},{"messageId":"166","fix":"178","desc":"168"},{"messageId":"163","fix":"179","desc":"165"},{"messageId":"166","fix":"180","desc":"168"},"suggestUnknown",{"range":"181","text":"182"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"181","text":"183"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"184","text":"182"},{"range":"184","text":"183"},{"range":"185","text":"182"},{"range":"185","text":"183"},{"range":"186","text":"182"},{"range":"186","text":"183"},{"range":"187","text":"182"},{"range":"187","text":"183"},{"range":"188","text":"182"},{"range":"188","text":"183"},{"range":"189","text":"182"},{"range":"189","text":"183"},[313,316],"unknown","never",[476,479],[1102,1105],[1557,1560],[1840,1843],[4764,4767],[686,689]]