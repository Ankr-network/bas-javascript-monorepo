[{"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/index.tsx":"1","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/reportWebVitals.ts":"2","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/index.tsx":"3","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/HomePage.tsx":"4","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ProposalTable.tsx":"5","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ValidatorTable.tsx":"6","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/CreateProposalForm.tsx":"7","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/index.ts":"8","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/LocalGridStore.ts":"9","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/BasStore.ts":"10","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/index.js":"11","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/types.js":"12","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/metamask.js":"13","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/config.js":"14","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/staking.js":"15","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/governance.js":"16","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/provider.js":"17"},{"size":735,"mtime":1648195951540,"results":"18","hashOfConfig":"19"},{"size":431,"mtime":1648195951541,"results":"20","hashOfConfig":"19"},{"size":1480,"mtime":1648195951541,"results":"21","hashOfConfig":"19"},{"size":3899,"mtime":1648195951540,"results":"22","hashOfConfig":"19"},{"size":5728,"mtime":1648202133920,"results":"23","hashOfConfig":"19"},{"size":4136,"mtime":1648195951540,"results":"24","hashOfConfig":"19"},{"size":5402,"mtime":1648195951540,"results":"25","hashOfConfig":"19"},{"size":865,"mtime":1648195951542,"results":"26","hashOfConfig":"19"},{"size":2635,"mtime":1648195951542,"results":"27","hashOfConfig":"19"},{"size":2213,"mtime":1648195951541,"results":"28","hashOfConfig":"19"},{"size":3738,"mtime":1648138098579,"results":"29","hashOfConfig":"30"},{"size":666,"mtime":1648138098580,"results":"31","hashOfConfig":"30"},{"size":3354,"mtime":1648138098579,"results":"32","hashOfConfig":"30"},{"size":45,"mtime":1648138098578,"results":"33","hashOfConfig":"30"},{"size":2575,"mtime":1648138098580,"results":"34","hashOfConfig":"30"},{"size":4885,"mtime":1648138098579,"results":"35","hashOfConfig":"30"},{"size":4590,"mtime":1648138098579,"results":"36","hashOfConfig":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"6yxp79",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"xcqml",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/index.tsx",[],["78","79","80","81","82"],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/reportWebVitals.ts",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/index.tsx",["83","84","85"],"import {HomeOutlined} from \"@ant-design/icons\"\nimport {Menu, PageHeader} from \"antd\"\nimport {observer} from \"mobx-react\"\nimport {useState} from \"react\"\nimport {Link, Route, Switch, useHistory} from \"react-router-dom\"\n\nimport HomePage from \"./HomePage\"\n\ninterface IIndexPageProps {\n}\n\nconst titles: Record<string, any> = {\n  home: {\n    title: 'Home Page',\n    sub: ' ',\n  },\n}\n\nconst IndexPage = observer((props: IIndexPageProps) => {\n  const [currentPage, setCurrentPage] = useState('home')\n  const history = useHistory()\n  return (<div style={{display: 'flex', height: '100%'}}>\n    <div style={{width: '256px', height: '100%'}}>\n      <Menu\n        defaultSelectedKeys={['home']}\n        inlineCollapsed={false}\n        mode=\"inline\"\n        style={{\n          height: '100%'\n        }}\n        theme=\"dark\"\n        onClick={({key}) => {\n          setCurrentPage(key)\n        }}\n      >\n        <Menu.Item key=\"home\" icon={<HomeOutlined translate=\"yes\"/>}>\n          <Link to=\"/\">\n            Consensus\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </div>\n\n    <div style={{width: '100%', padding: '0 20px 0'}}>\n      <PageHeader\n        className=\"site-page-header\"\n        subTitle={titles[currentPage].sub || 'Unknown Page'}\n        title={titles[currentPage].title || 'Unknown Page'}\n        onBack={() => history.goBack()}\n      />\n\n      <Switch>\n        <Route component={HomePage} path=\"/\"/>\n      </Switch>\n    </div>\n  </div>)\n})\n\nexport default IndexPage\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/pages/HomePage.tsx",["86","87","88","89","90","91","92","93","94","95","96","97","98"],"import {\n  LockOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport {Button, Divider, Drawer, Menu} from \"antd\";\nimport {observer} from \"mobx-react\";\nimport {ReactElement, useEffect, useState} from \"react\";\n\nimport CreateProposalForm from \"../components/CreateProposalForm\";\nimport ProposalTable from \"../components/ProposalTable\";\nimport ValidatorTable from \"../components/ValidatorTable\";\nimport {useChilizStore} from \"../stores\";\n\nconst ProposalNav = observer((props: any): ReactElement => {\n  const [drawerVisible, setDrawerVisible] = useState(false)\n  return (\n    <div>\n      <Drawer\n        bodyStyle={{paddingBottom: 80}}\n        title=\"Create proposal\"\n        visible={drawerVisible}\n        width={500}\n        onClose={() => {\n          setDrawerVisible(false)\n        }}\n      >\n        <CreateProposalForm/>\n      </Drawer>\n\n      <ProposalTable/>\n\n      <br/>\n\n      <Button icon={<PlusOutlined translate=\"yes\"/>} size=\"large\" type=\"primary\" onClick={() => {\n        setDrawerVisible(true)\n      }}>Create Proposal</Button>\n    </div>\n  );\n})\n\nconst ValidatorNav = observer((props: any): ReactElement => {\n  const store = useChilizStore()\n  const [stakingRewards, setStakingRewards] = useState('0')\n  useEffect(() => {\n\n  }, [store])\n  return (\n    <div>\n      <ValidatorTable/>\n    </div>\n  );\n})\n\ninterface IHomePageProps {\n}\n\nconst HomePage = observer((props: IHomePageProps): ReactElement => {\n  const store = useChilizStore()\n  const [currentTab, setCurrentTab] = useState('governance')\n  const [blockInfo, setBlockInfo] = useState({} as any)\n  useEffect(() => {\n    setInterval(async () => {\n      if (!store.isConnected) return;\n      setBlockInfo(await store.getBlockNumber())\n    }, 1_000)\n  }, [store])\n  if (!store.isConnected) {\n    return <h1>Connecting...</h1>\n  }\n  return (\n    <div>\n      <Menu\n        mode=\"horizontal\"\n        selectedKeys={[currentTab]}\n        onSelect={({selectedKeys}) => {\n          setCurrentTab(selectedKeys[0])\n        }}\n      >\n        <Menu.Item key=\"governance\" icon={<LockOutlined translate=\"yes\"/>}>\n          Governance\n        </Menu.Item>\n\n        <Menu.Item key=\"voting_power\" icon={<LockOutlined translate=\"yes\"/>}>\n          Voting Power\n        </Menu.Item>\n\n        <Menu.Item key=\"validator\" icon={<LockOutlined translate=\"yes\"/>}>\n          Validators\n        </Menu.Item>\n      </Menu>\n\n      <br/>\n\n      {currentTab === 'governance' && <ProposalNav/>}\n\n      {currentTab === 'validator' && <ValidatorNav/>}\n\n      <Divider/>\n\n      <b>blockNumber</b>: \n      \n      {blockInfo.blockNumber}\n        \n      <br/>\n\n      <b>currentEpoch</b>: \n        \n      {blockInfo.epoch}\n        \n      <br/>\n\n      <b>nextEpochBlock</b>: \n      \n      {blockInfo.nextEpochBlock}\n      \n      &nbsp;(in {blockInfo.nextEpochInSec} sec\n\n      or {(blockInfo.nextEpochInSec / 60).toFixed(1)} min)\n      \n      <br/>\n\n      <b>blockTime</b>: \n\n        {blockInfo.blockTime}\n\n      <br/>\n\n      <br/>\n\n      <b>activeValidatorsLength</b>: \n      \n      {blockInfo.activeValidatorsLength}\n      \n      <br/>\n\n      <b>epochBlockInterval</b>: \n      \n      {blockInfo.epochBlockInterval}\n      \n      <br/>\n\n      <b>misdemeanorThreshold</b>: \n      \n      {blockInfo.misdemeanorThreshold}\n      \n      <br/>\n\n      <b>felonyThreshold</b>: \n      \n      {blockInfo.felonyThreshold}\n      \n      <br/>\n\n      <b>validatorJailEpochLength</b>: \n      \n      {blockInfo.validatorJailEpochLength}\n      \n      <br/>\n\n      <b>undelegatePeriod</b>: \n      \n      {blockInfo.undelegatePeriod}\n      \n      <br/>\n\n      <b>minValidatorStakeAmount</b>: \n      \n      {blockInfo.minValidatorStakeAmount}\n      \n      <br/>\n\n      <b>minStakingAmount</b>: \n      \n      {blockInfo.minStakingAmount}\n      \n      <br/>\n\n      <br/>\n      P.S: MetaMask caches responses for 12 seconds\n\n      <Divider/>\n    </div>\n  );\n});\n\nexport default HomePage\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ProposalTable.tsx",["99"],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/ValidatorTable.tsx",["100","101","102","103","104","105","106","107","108","109","110","111"],"/* eslint-disable no-await-in-loop */\nimport {Web3Uint256, IValidator} from \"@ankr.com/bas-javascript-sdk\";\nimport {Button, Table} from \"antd\";\nimport {BigNumber} from \"bignumber.js\"\nimport {observer} from \"mobx-react\";\n\nimport {useChilizStore} from \"../stores\";\nimport {BasStore} from \"../stores/BasStore\";\nimport {useLocalGridStore} from \"../stores/LocalGridStore\";\n\nconst createTableColumns = (store: BasStore) => {\n  return [\n    {\n      title: 'Validator',\n      dataIndex: 'validator',\n      key: 'validator',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string) => {\n        switch (status) {\n          case '0':\n            return 'Not Found'\n          case '1':\n            return 'Active'\n          case '2':\n            return 'Pending'\n          case '3':\n            return 'Jail'\n          default:\n            return `Unknown (${status})`;\n        }\n      }\n    },\n    {\n      title: 'Slashes',\n      dataIndex: 'slashesCount',\n      key: 'slashesCount',\n    },\n    {\n      title: 'Total Delegated',\n      dataIndex: 'totalDelegated',\n      key: 'totalDelegated',\n      render: (value: string) => (Number(value) / 1e18).toFixed(0)\n    },\n    {\n      title: 'Delegated Amount',\n      dataIndex: 'myDelegatedAmount',\n      key: 'myDelegatedAmount',\n      render: (value: string) => (Number(value) / 1e18).toFixed(0)\n    },\n    {\n      title: 'Validator Fee (committed)',\n      dataIndex: 'validatorFee',\n      key: 'validatorFee',\n      render: (value: string) => (Number(value) / 1e18)\n    },\n    {\n      render: (validator: IValidator) => {\n        return (\n          <>\n            <Button type=\"primary\" onClick={async () => {\n              const amount = prompt('Enter delegation amount (in ether): ')\n              if (!amount) return;\n              const bigAmount = new BigNumber(amount).multipliedBy(10**18).toString(10)\n              console.log(`Amount is: ${bigAmount}`)\n              const result = await store.getBasSdk().getStaking().delegateTo(validator.validator, `${bigAmount}`);\n                const receipt = await result.receipt;\n              console.log(`Receipt: ${JSON.stringify(receipt, null, 2)}`);\n            }}>Delegate</Button>\n            &nbsp;\n            &nbsp;\n            <Button type=\"default\" onClick={async () => {\n              const amount = prompt('Enter undelegation amount (in ether): ')\n              if (!amount) return;\n              console.log(`Amount is: ${(Number(amount) * 10 ** 18).toFixed(0)}`)\n              const result = await store.getBasSdk().getStaking().undelegateFrom(validator.validator, `${(Number(amount) * 10 ** 18).toFixed(0)}`);\n                const receipt = await result.receipt;\n              console.log(`Receipt: ${JSON.stringify(receipt, null, 2)}`);\n            }}>Undelegate</Button>\n          </>\n        )\n      }\n    }\n  ];\n}\n\nexport interface IValidatorTableProps {\n}\n\ninterface IValidatorWithAmounts extends IValidator {\n  myDelegatedAmount: Web3Uint256;\n  validatorFee: Web3Uint256;\n  myStakingRewards: Web3Uint256;\n}\n\nconst ValidatorTableProps = observer((props: IValidatorTableProps) => {\n  const store = useChilizStore()\n  const grid = useLocalGridStore<IValidator>(async (offset: number, limit: number): Promise<[IValidatorWithAmounts[], boolean]> => {\n    const validators = await store.getBasSdk().getStaking().getValidators();\n      const result: IValidatorWithAmounts[] = []\n    // eslint-disable-next-line no-restricted-syntax\n    for (const validator of validators) {\n      result.push({ ...validator, myDelegatedAmount: await store.getBasSdk().getStaking().getMyDelegatedAmount(validator.validator),\n        validatorFee: await store.getBasSdk().getStaking().getValidatorRewards(validator.validator),\n        myStakingRewards: await store.getBasSdk().getStaking().getMyStakingRewards(validator.validator),});\n    }\n    return [result, false]\n  })\n  return (\n    <Table\n      columns={createTableColumns(store)}\n      dataSource={grid.items}\n      loading={grid.isLoading}\n      pagination={grid.paginationConfig}\n    />\n  );\n});\n\nexport default ValidatorTableProps\n","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/components/CreateProposalForm.tsx",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/index.ts",["112","113","114","115","116"],"import {MobXProviderContext} from 'mobx-react'\nimport { IValueMap } from 'mobx-react/dist/types/IValueMap';\nimport React from \"react\";\n\nimport {BasStore, DEVNET_CONFIG, TESTNET_CONFIG} from \"./BasStore\";\n\nconst currentEnvironment = process.env.REACT_APP_ENVIRONMENT || 'devnet';\n\nconsole.log(`Current env is: ${currentEnvironment}`)\n\nlet config = DEVNET_CONFIG\nif (currentEnvironment === 'devnet') {\n  config = DEVNET_CONFIG\n} else if (currentEnvironment === 'testnet') {\n  config = TESTNET_CONFIG\n}\n\nconst basStore = new BasStore(config)\nbasStore.connectFromInjected().then(async () => {\n  const currentAccount = basStore.getBasSdk().getKeyProvider().accounts;\n  console.log(`Current account is: ${[currentAccount]}`)\n})\n\nexport const useStores: any = () => {\n  return React.useContext(MobXProviderContext)\n}\n\nexport const useChilizStore = (): BasStore => basStore","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/LocalGridStore.ts",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/staking-ui/src/stores/BasStore.ts",["117"],"import {BasSdk, IConfig} from \"@ankr.com/bas-javascript-sdk\";\nimport {action, makeAutoObservable} from \"mobx\";\n\nconst makeDefaultConfig = (chainId: number, chainName: string, rpcUrl: string): IConfig => {\n  return {\n    chainId,\n    chainName,\n    rpcUrl,\n    // BSC-compatible contracts\n    stakingAddress: '0x0000000000000000000000000000000000001000',\n    slashingIndicatorAddress: '0x0000000000000000000000000000000000001001',\n    systemRewardAddress: '0x0000000000000000000000000000000000001002',\n    // custom contracts\n    stakingPoolAddress: '0x0000000000000000000000000000000000007001',\n    governanceAddress: '0x0000000000000000000000000000000000007002',\n    chainConfigAddress: '0x0000000000000000000000000000000000007003',\n    runtimeUpgradeAddress: '0x0000000000000000000000000000000000007004',\n    deployerProxyAddress: '0x0000000000000000000000000000000000007005',\n  }\n}\n\nexport const DEVNET_CONFIG: IConfig = makeDefaultConfig(1337, 'BAS devnet', '')\nexport const TESTNET_CONFIG: IConfig = makeDefaultConfig(17242, 'BAS testnet', '')\n\nexport class BasStore {\n\n  public isConnected = false\n\n  private readonly sdk: BasSdk\n\n  public constructor(private readonly config: IConfig) {\n    this.sdk = new BasSdk(config)\n    makeAutoObservable(this)\n  }\n\n  public getBasSdk(): BasSdk {\n    return this.sdk\n  }\n\n  @action\n  public async connectFromInjected(): Promise<void> {\n    this.isConnected = false\n    if (!this.sdk.isConnected()) {\n      await this.sdk.connect()\n    }\n    this.isConnected = true\n    try {\n      await this.getBlockNumber()\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public async getBlockNumber(): Promise<{\n    blockNumber: number;\n    epoch: number;\n    nextEpochBlock: number;\n    nextEpochInSec: number;\n    blockTime: number;\n    activeValidatorsLength: number;\n    epochBlockInterval: number;\n    misdemeanorThreshold: number;\n    felonyThreshold: number;\n    validatorJailEpochLength: number;\n    undelegatePeriod: number;\n    minValidatorStakeAmount: number;\n    minStakingAmount: number;\n  }> {\n    const chainConfig = await this.sdk.getChainConfig();\n      const chainParams = await this.sdk.getChainParams();\n    return { ...chainConfig, ...chainParams}\n  }\n}","/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/index.js",[],[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/types.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/metamask.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/config.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/staking.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/governance.js",[],"/Users/dmitry/Documents/bsc/bas-javascript-sdk/packages/javascript-sdk/lib/provider.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":12,"column":30,"nodeType":"130","messageId":"131","endLine":12,"endColumn":33,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":19,"column":29,"nodeType":"135","messageId":"136","endLine":19,"endColumn":51},{"ruleId":"137","severity":1,"message":"134","line":19,"column":29,"nodeType":"135","messageId":"136","endLine":19,"endColumn":51},{"ruleId":"133","severity":1,"message":"134","line":14,"column":31,"nodeType":"135","messageId":"136","endLine":14,"endColumn":41},{"ruleId":"137","severity":1,"message":"134","line":14,"column":31,"nodeType":"135","messageId":"136","endLine":14,"endColumn":41},{"ruleId":"128","severity":1,"message":"129","line":14,"column":38,"nodeType":"130","messageId":"131","endLine":14,"endColumn":41,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"134","line":41,"column":32,"nodeType":"135","messageId":"136","endLine":41,"endColumn":42},{"ruleId":"137","severity":1,"message":"134","line":41,"column":32,"nodeType":"135","messageId":"136","endLine":41,"endColumn":42},{"ruleId":"128","severity":1,"message":"129","line":41,"column":39,"nodeType":"130","messageId":"131","endLine":41,"endColumn":42,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"140","line":43,"column":10,"nodeType":"135","messageId":"136","endLine":43,"endColumn":24},{"ruleId":"137","severity":1,"message":"140","line":43,"column":10,"nodeType":"135","messageId":"136","endLine":43,"endColumn":24},{"ruleId":"133","severity":1,"message":"141","line":43,"column":26,"nodeType":"135","messageId":"136","endLine":43,"endColumn":43},{"ruleId":"137","severity":1,"message":"141","line":43,"column":26,"nodeType":"135","messageId":"136","endLine":43,"endColumn":43},{"ruleId":"133","severity":1,"message":"134","line":57,"column":28,"nodeType":"135","messageId":"136","endLine":57,"endColumn":49},{"ruleId":"137","severity":1,"message":"134","line":57,"column":28,"nodeType":"135","messageId":"136","endLine":57,"endColumn":49},{"ruleId":"128","severity":1,"message":"129","line":60,"column":52,"nodeType":"130","messageId":"131","endLine":60,"endColumn":55,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"129","line":65,"column":40,"nodeType":"130","messageId":"131","endLine":65,"endColumn":43,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":65,"column":30,"nodeType":"146","messageId":"147","endLine":65,"endColumn":76},{"ruleId":"148","severity":1,"message":"149","line":68,"column":15,"nodeType":"150","messageId":"147","endLine":68,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":71,"column":15,"nodeType":"150","messageId":"147","endLine":71,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":76,"column":30,"nodeType":"146","messageId":"147","endLine":76,"endColumn":78},{"ruleId":"148","severity":1,"message":"149","line":78,"column":15,"nodeType":"150","messageId":"147","endLine":78,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":81,"column":15,"nodeType":"150","messageId":"147","endLine":81,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":99,"column":39,"nodeType":"135","messageId":"136","endLine":99,"endColumn":66},{"ruleId":"137","severity":1,"message":"134","line":99,"column":39,"nodeType":"135","messageId":"136","endLine":99,"endColumn":66},{"ruleId":"133","severity":1,"message":"151","line":101,"column":53,"nodeType":"135","messageId":"136","endLine":101,"endColumn":67},{"ruleId":"137","severity":1,"message":"151","line":101,"column":53,"nodeType":"135","messageId":"136","endLine":101,"endColumn":67},{"ruleId":"133","severity":1,"message":"152","line":101,"column":69,"nodeType":"135","messageId":"136","endLine":101,"endColumn":82},{"ruleId":"137","severity":1,"message":"152","line":101,"column":69,"nodeType":"135","messageId":"136","endLine":101,"endColumn":82},{"ruleId":"133","severity":1,"message":"153","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":19},{"ruleId":"137","severity":1,"message":"153","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":9,"column":1,"nodeType":"150","messageId":"147","endLine":9,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":21,"column":3,"nodeType":"150","messageId":"147","endLine":21,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":24,"column":25,"nodeType":"130","messageId":"131","endLine":24,"endColumn":28,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"149","line":50,"column":7,"nodeType":"150","messageId":"147","endLine":50,"endColumn":20},"lines-around-directive",["155"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["156","157"],"no-unused-vars","'props' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars",["158","159"],["160","161"],"'stakingRewards' is assigned a value but never used.","'setStakingRewards' is assigned a value but never used.",["162","163"],["164","165"],"no-alert","Unexpected prompt.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression","'offset' is defined but never used.","'limit' is defined but never used.","'IValueMap' is defined but never used.",["166","167"],"padding-line-between-statements",{"messageId":"168","fix":"169","desc":"170"},{"messageId":"171","fix":"172","desc":"173"},{"messageId":"168","fix":"174","desc":"170"},{"messageId":"171","fix":"175","desc":"173"},{"messageId":"168","fix":"176","desc":"170"},{"messageId":"171","fix":"177","desc":"173"},{"messageId":"168","fix":"178","desc":"170"},{"messageId":"171","fix":"179","desc":"173"},{"messageId":"168","fix":"180","desc":"170"},{"messageId":"171","fix":"181","desc":"173"},{"messageId":"168","fix":"182","desc":"170"},{"messageId":"171","fix":"183","desc":"173"},"suggestUnknown",{"range":"184","text":"185"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"184","text":"186"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"187","text":"185"},{"range":"187","text":"186"},{"range":"188","text":"185"},{"range":"188","text":"186"},{"range":"189","text":"185"},{"range":"189","text":"186"},{"range":"190","text":"185"},{"range":"190","text":"186"},{"range":"191","text":"185"},{"range":"191","text":"186"},[313,316],"unknown","never",[479,482],[1105,1108],[1566,1569],[1825,1828],[747,750]]